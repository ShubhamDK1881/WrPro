AWSTemplateFormatVersion: '2010-09-09'
Description: CloudTrail setup with specific configurations for failed account logs, local automation, multi-region, and data events.

Parameters:
  TrailName:
    Type: String
  S3BucketCT:
    Type: String
  S3KeyPrefix:
    Type: String

Resources:
  CloudTrailLogsBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref S3BucketCT
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true

  CloudTrailLogsBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref CloudTrailLogsBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: 
              - 's3:GetBucketAcl'
              - 's3:PutObject'
            Resource: !Sub '${CloudTrailLogsBucket.Arn}/${S3KeyPrefix}AWSLogs/${AWS::AccountId}/*'
            Condition:
              StringEquals:
                s3:x-amz-acl: 'bucket-owner-full-control'

  MyCloudTrail:
    Type: 'AWS::CloudTrail::Trail'
    Properties:
      TrailName: !Ref TrailName
      S3BucketCT: !Ref CloudTrailLogsBucket
      S3KeyPrefix: !Ref S3KeyPrefix
      IsMultiRegionTrail: true
      EnableLogFileValidation: true
      IncludeGlobalServiceEvents: true
      IsLogging: true
      EventSelectors:
        - ReadWriteType: All
          IncludeManagementEvents: true
          DataResources:
            - Type: AWS::S3::Object
              Values: !Sub arn:aws:s3:::${S3BucketCT}/
            - Type: AWS::Lambda::Function
              Values: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:*

  LocalAutomationCloudTrail:
    Type: 'AWS::CloudTrail::Trail'
    Properties:
      TrailName: !Sub "${TrailName}-LocalAutomation"
      S3BucketCT: !Ref CloudTrailLogsBucket
      S3KeyPrefix: !Sub "${S3KeyPrefix}local-automation/"
      IsMultiRegionTrail: false
      EnableLogFileValidation: true
      IncludeGlobalServiceEvents: false
      IsLogging: true

  FailedAccountLogsGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub "/aws/cloudtrail/${TrailName}/failed-account-logs"
      RetentionInDays: 365

  FailedAccountCloudTrail:
    Type: 'AWS::CloudTrail::Trail'
    Properties:
      TrailName: !Sub "${TrailName}-FailedAccountLogs"
      S3BucketCT: !Ref CloudTrailLogsBucket
      S3KeyPrefix: !Sub "${S3KeyPrefix}failed-account-logs/"
      IsMultiRegionTrail: true
      EnableLogFileValidation: true
      IncludeGlobalServiceEvents: true
      IsLogging: true
      CloudWatchLogsLogGroupArn: !GetAtt FailedAccountLogsGroup.Arn
      CloudWatchLogsRoleArn: !GetAtt CloudTrailRole.Arn

  CloudTrailRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: CloudTrailToCloudWatch
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/cloudtrail/*

Outputs:
  TrailName:
    Description: The name of the CloudTrail
    Value: !Ref TrailName
  S3BucketCT:
    Description: The name of the S3 bucket storing CloudTrail logs
    Value: !Ref CloudTrailLogsBucket
  CloudWatchLogGroupArn:
    Description: The ARN of the CloudWatch Log Group for Failed Account Logs
    Value: !GetAtt FailedAccountLogsGroup.Arn
